config("libuv_config") {
  include_dirs = ["include"]
  defines = []
  libs = []
  ldflags = []

  if (!is_win) {
    defines += ["_LARGEFILE_SOURCE", "_FILE_OFFSET_BITS=64"]
  }
  if (is_mac || is_ios) {
    defines += ["_DARWIN_USE_64_BIT_INODE=1"]
  }
  if (is_linux) {
    defines += ["_POSIX_C_SOURCE=200112"]
  }
}

source_set("libuv") {
  include_dirs = ["include", "src"]
  public_configs = [":libuv_config"]
  defines = []
  cflags = []
  libs = []
  ldflags = []

  sources = [
    "include/uv.h",
    "include/tree.h",
    "include/uv-errno.h",
    "include/uv-threadpool.h",
    "include/uv-version.h",
    "src/fs-poll.c",
    "src/heap-inl.h",
    "src/inet.c",
    "src/queue.h",
    "src/threadpool.c",
    "src/uv-common.c",
    "src/uv-common.h",
    "src/version.c"
  ]

  if (is_win) {
    sources += [
      "include/uv-win.h",
      "src/win/async.c",
      "src/win/atomicops-inl.h",
      "src/win/core.c",
      "src/win/dl.c",
      "src/win/error.c",
      "src/win/fs.c",
      "src/win/fs-event.c",
      "src/win/getaddrinfo.c",
      "src/win/getnameinfo.c",
      "src/win/handle.c",
      "src/win/handle-inl.h",
      "src/win/internal.h",
      "src/win/loop-watcher.c",
      "src/win/pipe.c",
      "src/win/thread.c",
      "src/win/poll.c",
      "src/win/process.c",
      "src/win/process-stdio.c",
      "src/win/req.c",
      "src/win/req-inl.h",
      "src/win/signal.c",
      "src/win/snprintf.c",
      "src/win/stream.c",
      "src/win/stream-inl.h",
      "src/win/tcp.c",
      "src/win/tty.c",
      "src/win/timer.c",
      "src/win/udp.c",
      "src/win/util.c",
      "src/win/winapi.c",
      "src/win/winapi.h",
      "src/win/winsock.c",
      "src/win/winsock.h",
    ]
    libs = [
      "-ladvapi32",
      "-liphlpapi",
      "-lpsapi",
      "-lshell32",
      "-luser32",
      "-luserenv",
      "-lws2_32"
    ]
  } else {
    defines += ["BUILDING_UV_SHARED=1"]
    cflags += [
      "-fvisibility=hidden",
      "-g",
      "--std=gnu89",
      "-pedantic",
      "-Wall",
      "-Wextra",
      "-Wno-unused-parameter",
    ]

    sources += [
      "include/uv-unix.h",
      "include/uv-linux.h",
      "include/uv-sunos.h",
      "include/uv-darwin.h",
      "include/uv-bsd.h",
      "include/uv-aix.h",
      "src/unix/async.c",
      "src/unix/atomic-ops.h",
      "src/unix/core.c",
      "src/unix/dl.c",
      "src/unix/fs.c",
      "src/unix/getaddrinfo.c",
      "src/unix/getnameinfo.c",
      "src/unix/internal.h",
      "src/unix/loop.c",
      "src/unix/loop-watcher.c",
      "src/unix/pipe.c",
      "src/unix/poll.c",
      "src/unix/process.c",
      "src/unix/signal.c",
      "src/unix/spinlock.h",
      "src/unix/stream.c",
      "src/unix/tcp.c",
      "src/unix/thread.c",
      "src/unix/timer.c",
      "src/unix/tty.c",
      "src/unix/udp.c",
    ]

    cflags += ["-fPIC"]
    libs += [ "m" ]
    if (host_os == "solaris") {
      ldflags += ["-pthreads"]
    }
    if (host_os != "solaris" && !is_android) {
      ldflags += ["-pthread"]
    }

    if (is_mac || is_linux || is_android || is_ios) {
      sources += ["src/unix/proctitle.c"]
    }

    if (is_mac || is_ios) {
      sources += [
        "src/unix/darwin.c",
        "src/unix/fsevents.c",
        "src/unix/darwin-proctitle.c",
        "src/unix/pthread-barrier.c"
      ]
      defines += [
        "_DARWIN_USE_64_BIT_INODE=1",
        "_DARWIN_UNLIMITED_SELECT=1",
      ]
    }

    if (!is_mac) {
      cflags += ["-Wstrict-aliasing"]
    }

    if (is_linux) {
      defines += ["_GNU_SOURCE"]
      sources += [
        "src/unix/linux-core.c",
        "src/unix/linux-inotify.c",
        "src/unix/linux-syscalls.c",
        "src/unix/linux-syscalls.h",
      ]
      libs += ["dl", "rt"]
    }

    if (is_android) {
      sources += [
        "src/unix/linux-core.c",
        "src/unix/linux-inotify.c",
        "src/unix/linux-syscalls.c",
        "src/unix/linux-syscalls.h",
        "src/unix/pthread-fixes.c",
        "src/unix/android-ifaddrs.c",
        "src/unix/pthread-barrier.c"
      ]
      libs += ["dl"]
    }

    if (host_os == "solaris") {
      sources += ["src/unix/sunos.c"]
      defines += [
        "__EXTENSIONS__",
        "_XOPEN_SOURCE=500"
      ]
      libs += [
        "kstat",
        "nsl",
        "sendfile",
        "socket",
      ]
    }

    if (is_ios || is_mac) {
      sources += ["src/unix/kqueue.c"]
    }
  }

  if (is_clang) {
    configs -= [ "//build/config/clang:extra_warnings" ]
  }
}
